import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import Icon from "@/components/ui/icon";

interface ResultsDashboardProps {
  onNavigate: (section: string) => void;
}

const mockResults = {
  personalityType: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å",
  topInterests: [
    { name: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", percentage: 85 },
    { name: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", percentage: 78 },
    { name: "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º", percentage: 72 },
  ],
  recommendedProfessions: [
    {
      title: "Data Scientist",
      match: 92,
      description: "–ê–Ω–∞–ª–∏–∑ –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–µ–ª–µ–π",
      category: "IT –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
    },
    {
      title: "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫",
      match: 87,
      description: "–ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ IT-—Ä–µ—à–µ–Ω–∏–π",
      category: "IT –∏ –±–∏–∑–Ω–µ—Å",
    },
    {
      title: "UX-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å",
      match: 81,
      description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è",
      category: "–î–∏–∑–∞–π–Ω –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
    },
  ],
  skills: [
    { name: "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", level: 90 },
    { name: "–í–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º", level: 85 },
    { name: "–°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥", level: 80 },
    { name: "–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏", level: 65 },
  ],
};

const ResultsDashboard = ({ onNavigate }: ResultsDashboardProps) => {
  const getMatchColor = (match: number) => {
    if (match >= 85) return "text-green-600 bg-green-50";
    if (match >= 70) return "text-yellow-600 bg-yellow-50";
    return "text-orange-600 bg-orange-50";
  };

  return (
    <section className="py-16 bg-gradient-to-br from-gray-50 to-blue-50">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <Icon
            name="TrendingUp"
            size={64}
            className="mx-auto text-purple-600 mb-4"
          />
          <h2 className="text-3xl font-bold text-gray-800 mb-4">
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
          </h2>
          <p className="text-gray-600 max-w-2xl mx-auto">
            –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
          {/* –¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ */}
          <Card className="bg-gradient-to-br from-purple-500 to-blue-600 text-white">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Icon name="User" size={24} />
                –í–∞—à —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-center">
                <h3 className="text-2xl font-bold mb-2">
                  {mockResults.personalityType}
                </h3>
                <p className="opacity-90">
                  –í—ã –ª—é–±–∏—Ç–µ –∏–∑—É—á–∞—Ç—å –Ω–æ–≤–æ–µ, –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–æ–∫–∞–ø—ã–≤–∞—Ç—å—Å—è –¥–æ
                  —Å—É—Ç–∏ –≤–µ—â–µ–π. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Ñ–∞–∫—Ç–∞–º–∏.
                </p>
              </div>
            </CardContent>
          </Card>

          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Icon name="Target" size={24} className="text-purple-600" />
                –í–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {mockResults.topInterests.map((interest) => (
                <div key={interest.name}>
                  <div className="flex justify-between mb-2">
                    <span className="font-medium">{interest.name}</span>
                    <span className="text-sm text-gray-600">
                      {interest.percentage}%
                    </span>
                  </div>
                  <Progress value={interest.percentage} className="h-2" />
                </div>
              ))}
            </CardContent>
          </Card>

          {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ */}
          <Card className="lg:col-span-2">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Icon name="Briefcase" size={24} className="text-purple-600" />
                –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-3 gap-4">
                {mockResults.recommendedProfessions.map((profession, index) => (
                  <div
                    key={profession.title}
                    className="p-4 border rounded-lg bg-white"
                  >
                    <div className="flex items-center justify-between mb-2">
                      <Badge className={getMatchColor(profession.match)}>
                        {profession.match}% —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                      </Badge>
                      <span className="text-2xl">
                        {index === 0 ? "ü•á" : index === 1 ? "ü•à" : "ü•â"}
                      </span>
                    </div>
                    <h4 className="font-semibold mb-1">{profession.title}</h4>
                    <Badge variant="outline" className="text-xs mb-2">
                      {profession.category}
                    </Badge>
                    <p className="text-sm text-gray-600 mb-4">
                      {profession.description}
                    </p>
                    <Button
                      size="sm"
                      variant="outline"
                      className="w-full"
                      onClick={() =>
                        alert(
                          `–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ "${profession.title}" —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!`,
                        )
                      }
                    >
                      –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
                    </Button>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* –ù–∞–≤—ã–∫–∏ */}
          <Card className="lg:col-span-2">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Icon name="Award" size={24} className="text-purple-600" />
                –í–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-2 gap-6">
                {mockResults.skills.map((skill) => (
                  <div key={skill.name}>
                    <div className="flex justify-between mb-2">
                      <span className="font-medium">{skill.name}</span>
                      <span className="text-sm text-gray-600">
                        {skill.level}%
                      </span>
                    </div>
                    <Progress value={skill.level} className="h-3" />
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        <div className="text-center mt-12">
          <Button
            size="lg"
            className="bg-purple-600 hover:bg-purple-700 mr-4"
            onClick={() =>
              alert("–§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!")
            }
          >
            <Icon name="Download" size={20} className="mr-2" />
            –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç
          </Button>
          <Button
            size="lg"
            variant="outline"
            onClick={() =>
              alert("–ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!")
            }
          >
            <Icon name="MessageCircle" size={20} className="mr-2" />
            –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
          </Button>
        </div>
      </div>
    </section>
  );
};

export default ResultsDashboard;
